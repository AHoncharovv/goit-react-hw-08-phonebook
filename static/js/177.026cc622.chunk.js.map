{"version":3,"file":"static/js/177.026cc622.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","Pages/Phonebook.js"],"sourcesContent":["const getContactsList = (state) => state.contacts.contactsList;\nconst getIsLoad = (state) => state.contacts.isLoad; \n\nconst contactsSelectors = {\n    getContactsList,\n    getIsLoad,\n}\n\nexport default contactsSelectors;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport contactsSelectors from \"redux/contacts/contactsSelectors\";\nimport contactsOperations from \"redux/contacts/contactsOperations\";\n\nfunction ContactForm() {\n\n    const dispatch = useDispatch();\n    const contactsList = useSelector(contactsSelectors.getContactsList);\n    const [ name, setName ] = useState('');\n    const [ number, setPhone ] = useState('');\n\n    const handleInputChange = e => {\n        switch (e.currentTarget.name) {\n            case \"name\": return setName(e.currentTarget.value);\n            case \"number\": return setPhone(e.currentTarget.value);\n            default: return \"\";\n        }\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const newUser = { name, number };\n        const newUserNormalized = name.toLowerCase();\n        const matchedName = contactsList.find(user => user.name.toLowerCase() === newUserNormalized);\n        matchedName ? alert(`${name} is already in contacts.`) : dispatch(contactsOperations.addContact(newUser));\n        formReset()\n    }\n         \n    const formReset = () => {\n        setName(\"\");\n        setPhone(\"\");\n        return\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n  \n            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                            value={name}\n                            onChange={handleInputChange}/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formPassword\">\n                <Form.Label>Number</Form.Label>\n                <Form.Control type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                            value={number}\n                            onChange={handleInputChange}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Add contact\n            </Button>\n        </Form>\n    );   \n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"btn\":\"ContactList_btn__6Piat\"};","import s from './ContactList.module.css';\nimport { useSelector, useDispatch } from \"react-redux/es/exports\";\nimport { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport contactsOperations from 'redux/contacts/contactsOperations';\nimport contactsSelectors from 'redux/contacts/contactsSelectors';\n\nfunction ContactList() {\n    const dispatch = useDispatch();\n    const isLoad = useSelector(contactsSelectors.getIsLoad);\n    const contactsList = useSelector(contactsSelectors.getContactsList);\n\n    useEffect(() => {\n        dispatch(contactsOperations.getContacts());\n    }, [dispatch]);\n    \n    const filteredValue = useSelector(state => state.filter);\n\n    const handleDeleteUser = event => {\n        const deleteUserId = event.currentTarget.value;\n        dispatch(contactsOperations.deleteContact(deleteUserId));\n        event.currentTarget.disabled = true;\n    }\n\n    const normalizedFilter = filteredValue.toLowerCase();\n    let visibleContacts = null;\n    normalizedFilter ? visibleContacts = contactsList.filter(user => user.name.toLowerCase().includes(normalizedFilter)) : visibleContacts = contactsList;\n    \n    return (\n        <>\n            {isLoad ?\n                ('Loading...')\n                :\n                (<ul className={s.list}>\n                    {visibleContacts.map((user) => (\n                        <li key={user.id} className={s.item}>\n                            <span className={s.text}>{user.name} : {user.number}</span>\n                            <Button variant=\"primary\" type=\"button\" value={user.id} onClick={handleDeleteUser} >\n                                Delete\n                            </Button>\n                        </li>\n                    ))}\n                </ul >)\n            }\n        </>\n    )\n}\n\nexport default ContactList;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector } from \"react-redux/es/exports\";\nimport { useDispatch } from \"react-redux/es/exports\";\nimport { filter } from '../../redux/filter/filterAction';\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n\n    const filteredValue = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n\n    const handlerFilter = event => {\n    const filtered = event.currentTarget.value;\n    dispatch(filter(filtered));\n  }\n    \n    return (\n        <label className={s.label}>\n            Find contacts by name\n            <input value={filteredValue} onChange={handlerFilter} className={s.input}></input>\n        </label>\n    )\n}\n\nexport default Filter;","import ContactForm from \"../components/ContactForm\";\nimport ContactList from \"../components/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\n\nfunction Phonebook() {\n\n  return ( \n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        color: '#010101'\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  ); \n};\n\nexport default Phonebook;"],"names":["getContactsList","state","contacts","contactsList","getIsLoad","isLoad","dispatch","useDispatch","useSelector","contactsSelectors","useState","name","setName","number","setPhone","handleInputChange","e","currentTarget","value","formReset","Form","onSubmit","event","preventDefault","newUser","newUserNormalized","toLowerCase","find","user","alert","contactsOperations","className","controlId","type","pattern","title","required","onChange","Button","variant","useEffect","filteredValue","filter","handleDeleteUser","deleteUserId","disabled","normalizedFilter","visibleContacts","includes","s","map","id","onClick","filtered","style","display","flexDirection","alignItems","color"],"sourceRoot":""}