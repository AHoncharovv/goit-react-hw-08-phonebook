{"version":3,"file":"static/js/318.6dfaa382.chunk.js","mappings":"oNACA,EAA6B,+BAA7B,EAAmE,yBAAnE,EAAyG,+BCWzG,EAPsB,CAClBA,YANgB,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKC,MAO3CC,aANiB,SAACJ,GAAD,OAAWA,EAAMC,KAAKC,KAAKG,OAO5CC,YANgB,SAACN,GAAD,OAAWA,EAAMC,KAAKM,UAOtCC,SANa,SAACR,GAAD,OAAWA,EAAMC,KAAKQ,Q,UCFvC,EAA4B,4BAA5B,EAA+D,uB,SCKhD,SAASC,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXV,GAAOW,EAAAA,EAAAA,IAAYC,EAAAA,aAKzB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAID,UAAWC,EAAf,oBAAqCd,MACrC,mBAAQe,KAAK,SAASC,QAPd,WACZP,EAASQ,EAAAA,EAAAA,WAML,qBCTG,SAASC,IAEpB,IAAMb,GAAWM,EAAAA,EAAAA,IAAYC,EAAAA,aAE7B,OACI,iCACI,iBAAKC,UAAWC,EAAhB,WACI,SAAC,KAAD,CAASK,GAAG,YACRN,UAAW,gBAAGO,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAcN,EAAyBA,IADzE,uBAMCT,GACG,SAACG,EAAD,KAEA,iCACI,SAAC,KAAD,CAASW,GAAG,YACZN,UAAW,gBAAGO,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAcN,EAAyBA,IADrE,2BAKJ,SAAC,KAAD,CAASK,GAAG,SACRN,UAAW,gBAAGO,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAcN,EAAyBA,IADzE,0BAQR","sources":["webpack://react-homework-template/./src/components/Navigation/Navigation.module.css?4bf2","redux/auth/authSelectors.js","webpack://react-homework-template/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navigation\":\"Navigation_navigation__xIjqU\",\"link\":\"Navigation_link__13qe6\",\"activeLink\":\"Navigation_activeLink__M+D4I\"};","const getUserName = (state) => state.auth.user.name;\nconst getUserEmail = (state) => state.auth.user.email;\nconst getIsLogged = (state) => state.auth.isLogged;\nconst getToken = (state) => state.auth.token;\n\nconst authSelectors = {\n    getUserName,\n    getUserEmail,\n    getIsLogged,\n    getToken,\n}\n\nexport default authSelectors;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserMenu_container__KolyR\",\"text\":\"UserMenu_text__BE4m4\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport authSelectors from 'redux/auth/authSelectors';\nimport authOperations from 'redux/auth/authOperations';\nimport styles from './UserMenu.module.css';\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const user = useSelector(authSelectors.getUserName);\n    const onClick = () => {\n        dispatch(authOperations.logOut())\n    }\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.text}>Hello, { user ?? user }</h2>\n            <button type='button' onClick={onClick}>Exit</button>\n        </div >   \n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {  NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\nimport UserMenu from 'components/UserMenu';\nimport authSelectors from '../../redux/auth/authSelectors';\n\nexport default function Navigation() {\n    \n    const isLogged = useSelector(authSelectors.getIsLogged);\n\n    return (\n        <>\n            <nav className={styles.navigation}>\n                <NavLink to='/contacts'\n                    className={({ isActive }) => (isActive ? `${styles.activeLink}` : `${styles.link}`)}\n                >\n                    Phonebook\n                </NavLink>\n\n                {isLogged ?\n                    <UserMenu />\n                    :\n                    <>\n                        <NavLink to='/register'\n                        className={({ isActive }) => (isActive ? `${styles.activeLink}` : `${styles.link}`)} \n                    >\n                        Registration\n                    </NavLink>\n                    <NavLink to='/login'\n                        className={({ isActive }) => (isActive ? `${styles.activeLink}` : `${styles.link}`)}\n                    >\n                        Login\n                    </NavLink>\n                    </>\n                }  \n            </nav>\n            <hr />\n        </>\n    )\n}"],"names":["getUserName","state","auth","user","name","getUserEmail","email","getIsLogged","isLogged","getToken","token","UserMenu","dispatch","useDispatch","useSelector","authSelectors","className","styles","type","onClick","authOperations","Navigation","to","isActive"],"sourceRoot":""}